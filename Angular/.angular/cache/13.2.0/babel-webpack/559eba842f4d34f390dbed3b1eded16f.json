{"ast":null,"code":"// Service de l'application du jeu - commandes de jeu et initialisation du monde\nimport { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./game.service\";\nexport let AppService = /*#__PURE__*/(() => {\n  class AppService {\n    constructor(gameService) {\n      this.gameService = gameService;\n      this.isImageLoaded = new EventEmitter();\n    }\n\n    createPlayGround(canvasElement) {\n      this.gameService.loadAssets(canvasElement).then(image => {\n        setTimeout(() => {\n          this.isImageLoaded.emit();\n        }, 1000);\n      });\n    }\n\n    getImageLoadEmitter() {\n      return this.isImageLoaded;\n    }\n\n    movePlayer(event, type) {\n      if (type === 'keydown') {\n        if (event.keyCode === 37) {\n          this.gameService.moveLeft = true;\n          this.gameService.moveUP = false;\n          this.gameService.moveDown = false;\n        } else if (event.keyCode === 39) {\n          this.gameService.moveRight = true;\n          this.gameService.moveLeft = false;\n          this.gameService.moveUP = false;\n          this.gameService.moveDown = false;\n        } else if (event.keyCode === 38) {\n          this.gameService.moveUP = true;\n          this.gameService.moveLeft = false;\n          this.gameService.moveRight = false;\n          this.gameService.moveDown = false;\n        } else if (event.keyCode === 40) {\n          this.gameService.moveDown = true;\n          this.gameService.moveLeft = false;\n          this.gameService.moveRight = false;\n          this.gameService.moveUP = false;\n        }\n      } else if (type === 'keyup') {\n        this.gameService.moveDown = false;\n        this.gameService.moveLeft = false;\n        this.gameService.moveRight = false;\n        this.gameService.moveUP = false;\n      }\n    }\n\n  }\n\n  AppService.ɵfac = function AppService_Factory(t) {\n    return new (t || AppService)(i0.ɵɵinject(i1.GameService));\n  };\n\n  AppService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AppService,\n    factory: AppService.ɵfac\n  });\n  return AppService;\n})();","map":null,"metadata":{},"sourceType":"module"}